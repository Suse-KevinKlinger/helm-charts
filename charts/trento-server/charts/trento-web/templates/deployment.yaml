{{ $grafanaSecret := include "trento.grafana.password" . }}

apiVersion: v1
kind: Secret
metadata:
  name: trento-server-grafana-secret
type: Opaque
data:
  admin-user: {{ "admin" | b64enc | quote }}
  admin-password: {{ $grafanaSecret | quote }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trento-web.fullname" . }}
  labels:
    {{- include "trento-web.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "trento-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "trento-web.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "trento-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          env:
            - name: SECRET_KEY_BASE
              value: CFp7S2zf66OCok0GOv8co2AGxBkHdsYBZcqpkMQfcJH6si2PNOVgS0hix0cW1/Ya
            - name: DATABASE_URL
              value: "ecto://postgres:postgres@{{ .Release.Name }}-{{ .Values.global.postgresql.name }}/trento"
            - name: EVENTSTORE_URL
              value: "ecto://postgres:postgres@{{ .Release.Name }}-{{ .Values.global.postgresql.name }}/trento_event_store"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ['eval', 'Trento.Release.init()']
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: SECRET_KEY_BASE
              value: CFp7S2zf66OCok0GOv8co2AGxBkHdsYBZcqpkMQfcJH6si2PNOVgS0hix0cW1/Ya
            - name: DATABASE_URL
              value: "ecto://postgres:postgres@{{ .Release.Name }}-{{ .Values.global.postgresql.name }}/trento"
            - name: EVENTSTORE_URL
              value: "ecto://postgres:postgres@{{ .Release.Name }}-{{ .Values.global.postgresql.name }}/trento_event_store"
          args:
            - start
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.webService.port }}
              protocol: TCP
          #   - name: collector
          #     containerPort: {{ .Values.collectorService.port }}
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /api/ping
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /api/ping
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: certs
            mountPath: "/certs"
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: certs
        secret:
          secretName: {{ include "trento-web.fullname" . }}-certs
          items:
          - key: cert
            path: cert.pem
          - key: ca
            path: ca.pem
          - key: key
            path: key.pem
